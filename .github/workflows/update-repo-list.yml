name: Update org README with repos (curl + jq)

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * 1' # every Monday 06:00 UTC

permissions:
  contents: write

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Ensure jq exists
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Build repo list and update README
        env:
          TOKEN: ${{ secrets.ORG_PAT || github.token }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          set -euo pipefail

          MARKER_START='<!-- REPO-LIST-START -->'
          MARKER_END='<!-- REPO-LIST-END -->'

          # Extract org (the owner part of "owner/repo")
          ORG="${GITHUB_REPOSITORY%%/*}"
          echo "Org detected: $ORG"

          # Fetch repo list
          REPO_JSON=$(curl -s -H "Authorization: token $TOKEN" \
            "https://api.github.com/orgs/${ORG}/repos?per_page=100&type=all&sort=full_name")

          # Convert JSON to markdown
          REPO_LIST=$(printf '%s\n' "$REPO_JSON" \
            | jq -r '.[] | "- [\(.name)](\(.html_url)): \(.description // "No description") (Updated: \(.updated_at[0:10]))"')

          # Make sure README.md exists
          [ -f README.md ] || touch README.md

          TMP=README.md.new

          # Replace content between markers (using | as delimiter to avoid / conflicts)
          if grep -qF "$MARKER_START" README.md && grep -qF "$MARKER_END" README.md; then
            perl -0777 -pe "s|${MARKER_START}.*?${MARKER_END}|${MARKER_START}\n\n${REPO_LIST}\n\n${MARKER_END}|s" README.md > "$TMP"
          else
            {
              cat README.md
              echo
              echo "$MARKER_START"
              echo
              echo "$REPO_LIST"
              echo
              echo "$MARKER_END"
            } > "$TMP"
          fi

          # Commit only if changed
          if git diff --no-index --quiet README.md "$TMP"; then
            echo "No changes."
            rm -f "$TMP"
            exit 0
          fi

          mv "$TMP" README.md
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add README.md
          git commit -m "chore: update org repo list in README" || true
          git push origin HEAD
